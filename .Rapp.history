x <- 4
y <- 5
x+y
[1] + 3
[1]
exit
require(stats)#
mosaicplot(Titanic, main = "Survival on the Titanic", color = TRUE)#
## Formula interface for tabulated data:#
mosaicplot(~ Sex + Age + Survived, data = Titanic, color = TRUE)#
#
mosaicplot(HairEyeColor, shade = TRUE)#
## Independence model of hair and eye color and sex.  Indicates that#
## there are more blue eyed blonde females than expected in the case#
## of independence and too few brown eyed blonde females.#
## The corresponding model is:#
fm <- loglin(HairEyeColor, list(1, 2, 3))#
pchisq(fm$pearson, fm$df, lower.tail = FALSE)#
#
mosaicplot(HairEyeColor, shade = TRUE, margin = list(1:2, 3))#
## Model of joint independence of sex from hair and eye color.  Males#
## are underrepresented among people with brown hair and eyes, and are#
## overrepresented among people with brown hair and blue eyes.#
## The corresponding model is:#
fm <- loglin(HairEyeColor, list(1:2, 3))#
pchisq(fm$pearson, fm$df, lower.tail = FALSE)#
#
## Formula interface for raw data: visualize cross-tabulation of numbers#
## of gears and carburettors in Motor Trend car data.#
mosaicplot(~ gear + carb, data = mtcars, color = TRUE, las = 1)#
# color recycling#
mosaicplot(~ gear + carb, data = mtcars, color = 2:3, las = 1)
crap
clear
clr
cls
mosaicplot(~ gear + carb, data = mtcars, color = 2:3, las = 1)
require(stats)#
mosaicplot(Titanic, main = "Survival on the Titanic", color = TRUE)#
## Formula interface for tabulated data:#
mosaicplot(~ Sex + Age + Survived, data = Titanic, color = TRUE)#
#
mosaicplot(HairEyeColor, shade = TRUE)#
## Independence model of hair and eye color and sex.  Indicates that#
## there are more blue eyed blonde females than expected in the case#
## of independence and too few brown eyed blonde females.#
## The corresponding model is:#
fm <- loglin(HairEyeColor, list(1, 2, 3))#
pchisq(fm$pearson, fm$df, lower.tail = FALSE)#
#
mosaicplot(HairEyeColor, shade = TRUE, margin = list(1:2, 3))#
## Model of joint independence of sex from hair and eye color.  Males#
## are underrepresented among people with brown hair and eyes, and are#
## overrepresented among people with brown hair and blue eyes.#
## The corresponding model is:#
fm <- loglin(HairEyeColor, list(1:2, 3))#
pchisq(fm$pearson, fm$df, lower.tail = FALSE)#
#
## Formula interface for raw data: visualize cross-tabulation of numbers#
## of gears and carburettors in Motor Trend car data.#
mosaicplot(~ gear + carb, data = mtcars, color = TRUE, las = 1)#
# color recycling#
mosaicplot(~ gear + carb, data = mtcars, color = 2:3, las = 1)
source("http://www.openintro.org/stat/data/arbuthnot.R")
ls()
cdc
?dnorm
download.file("http://www.openintro.org/stat/data/bdims.RData", destfile = "bdims.RData")
load("bdims.RData")
head(bdims)
mdims <- subset(bdims, bdims$sex == m)
mdims <- subset(bdims, bdims$sex == 1)
fdims <- subset(bdims, bdims$sex == 0)
hist(mdims$hgt)
hist(fdims$hgt)
hist(fdims$hgt, mdims$hgt)
hist(fdims$hgt,mdims$hgt)
?hist
barplot(mdims$hgt, fdims$hgt)
hist(fdims$hgt)
hist(mdims$hgt)
hist(fdims$hgt)
hist(mdims$hgt)
hist(fdims$hgt)
hist(mdims$hgt)
hist(fdims$hgt)
hist(fdims$hgt), hist(mdims$hgt)
hist(fdims$hgt) & hist(mdims$hgt)
hist(fdims$hgt) hist(mdims$hgt)
hist(fdims$hgt)  hist(mdims$hgt)
download.file("http://www.openintro.org/stat/data/kobe.RData", destfile = "kobe.RData")
load kobe.RData
load("kobe.RData")
names(kobe)
head(kobe)
kobe$basket[1:9]
kobe_streak <- calc_streak(kobe$basket)
barplot(table(kobe_streak))
sum(kobe$basket == H)
sum(kobe$basket == 'H')
sum(kobe$basket == 'M')
summary(kobe$basket)
outcomes <- c("H", "M")
sim_basket <- sample (outcomes, size=100, replace = TRUE)
names sim_basket
names(sim_basket)
table(sim_basket)
install.packages("rjson")
librar("rjson")
library("rjson")
json_file(""http://webonastick.com/uscl/feeds/uscl.json.txt"")
json_file <- "http://webonastick.com/uscl/feeds/uscl.json.txt"
json_data <- fromJSON(paste(readLines(json_file), collapse=""))
mean[1:5]
mean([1:5])
mean(1:5)
install("installr")
install.packages("installr")
install.RStudio()
install.packages("installr")
?choose
mean?
?mean
?histogram
??histogram
??load
?load.csb
?load.csv
?load
a <- available.packages()
install.packages("slidify")
install.packages("KernSmooth")
?seq
?matrix
my_matrix2 <- (1:20,4,5)
my_matrix2 <- matrix(1:20,4,5)
my_matrix2
pollutantmean <- function (directory, pollutant, id = 1:332) {}
swirl()
librar(swirl)
library(swirl)
swirl()
skip()
my_na <- is.na(my_data)
skip()
my_data == NA
skip()
y
exit
bye()
df
f
?append
?iris
iris
apply(iris, 'Septal.Length', mean)
X <- iris
X
apply(X, 'Septal.Length', mean)
apply(X['Septal.Length'], 1, mean)
apply(X[Sepal.Length], 1, mean)
apply(X['Sepal.Length'], 1, mean)
apply(X['Sepal.Length'], 2, mean)
f <- gl (3, 10)
f
tapply(X, f, mean)
tapply(X[Species], f, mean)
tapply(X['Species'], f, mean)
tapply(X, Species, mean)
tapply(X, "Species", mean)
f <- as.factor(X$Species)
f
tapply(X, f, mean)
length(X)
length(f)
tapply(X$Sepal.Length, f, mean)
apply(iris, 1, mean)
colMeans(iris)
apply(iris, 2, mean)
apply(iris[, 1:4], 2, mean)
mtcars
tapply(mtcars$cyl, mtcars$mpg, mean)
split(mtcars, mtcars$cyl)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
sapply(mtcars, cyl, mean)
?abs
sapply(split(mtcars$mpg, mtcars$cyl), mean)
sapply(split(mtcars$hp, mtcars$cyl), mean)
abs (82.63636 - 209.21429)
debug(ls)
ls
debug(ls)
ls
debug(ls)
ls
trace
ls(X)
n
?solve
?inverse
set.seed(1)
rpois(5,2)
set.seed(1)
rpois(5,2)
?set.seed
set.seed(10)#
x <- rbinom(10, 10, 0.5)#
e <- rnorm(10, 0, 20)#
y <- 0.5 + 2 * x + e
?download.file
?strptime()
?strptime
?as.Date
packages(ggplot2)
library(ggplot2)
install.packages(ggplot2)
install.package(ggplot2)
install.packages("ggplot2")
library(ggplot2)
library("ggplot2")
install.packages("ggplot2")
library("ggplot2")
qplot(data=mpg)
testdata <- data.frame(x =1:100, y=rnorm(100))
plot (testdata$x, testdata$y, type =1, ylim = c(-3,3))
plot (testdata$x, testdata$y, type = 'l', ylim = c(-3,3))
ggplot(testdata, aes(x =x, y = y))
g <- ggplot(testdata, aes(x =x, y = y))
g + geom_line()
testdata[50,2] <- 100
g <- ggplot(testdata, aes(x =x, y = y))
g + geom_line()
source("/Users/Leo/Documents/image.R")
a = 4
who
whos
exit
exit()
setwd('/Users/Leo/Developer/Leap/untitled folder')
data <- read.csv()
data <- read.csv("train.csv")
data
data <- round(data[,],2)
data <- round(data[,],2)
